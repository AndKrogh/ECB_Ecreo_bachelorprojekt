// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ECBilling.Migrations
{
    [DbContext(typeof(EcBillingContext))]
    partial class EcBillingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.DbEntities.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            Address = "123 Elm Street",
                            ContactInfo = "Good customer",
                            CustomerName = "Acme Corp"
                        },
                        new
                        {
                            CustomerID = 2,
                            Address = "456 Oak Avenue",
                            ContactInfo = "Bad customer",
                            CustomerName = "Tech Solutions"
                        });
                });

            modelBuilder.Entity("Models.DbEntities.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"));

                    b.Property<bool>("Availability")
                        .HasColumnType("bit");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VacationDays")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            Availability = true,
                            Department = "IT",
                            FirstName = "John",
                            LastName = "Doe",
                            Title = "Project Manager",
                            VacationDays = 15
                        },
                        new
                        {
                            EmployeeID = 2,
                            Availability = true,
                            Department = "Engineering",
                            FirstName = "Jane",
                            LastName = "Smith",
                            Title = "Developer",
                            VacationDays = 10
                        });
                });

            modelBuilder.Entity("Models.DbEntities.EmployeeSkill", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("SkillID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("EmployeeID", "SkillID");

                    b.HasIndex("SkillID");

                    b.ToTable("EmployeeSkills");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            SkillID = 1
                        },
                        new
                        {
                            EmployeeID = 2,
                            SkillID = 2
                        });
                });

            modelBuilder.Entity("Models.DbEntities.EmployeeTask", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("TaskID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RoleInTask")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID", "TaskID");

                    b.HasIndex("TaskID");

                    b.ToTable("EmployeeTasks");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            TaskID = 1,
                            AssignedDate = new DateTime(2024, 11, 12, 15, 39, 36, 874, DateTimeKind.Local).AddTicks(4224),
                            RoleInTask = "Lead"
                        },
                        new
                        {
                            EmployeeID = 2,
                            TaskID = 2,
                            AssignedDate = new DateTime(2024, 11, 12, 15, 39, 36, 874, DateTimeKind.Local).AddTicks(4273),
                            RoleInTask = "Developer"
                        });
                });

            modelBuilder.Entity("Models.DbEntities.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectID = 1,
                            CustomerID = 1,
                            Description = "A custom CRM for Acme Corp",
                            Requirements = "Build CRM system"
                        },
                        new
                        {
                            ProjectID = 2,
                            CustomerID = 2,
                            Description = "Online store for Tech Solutions",
                            Requirements = "E-commerce website"
                        });
                });

            modelBuilder.Entity("Models.DbEntities.ProjectTask", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskID"));

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.Property<string>("TaskDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaskID");

                    b.HasIndex("ProjectID");

                    b.ToTable("ProjectTasks");

                    b.HasData(
                        new
                        {
                            TaskID = 1,
                            ProjectID = 1,
                            TaskDetail = "Design database schema"
                        },
                        new
                        {
                            TaskID = 2,
                            ProjectID = 2,
                            TaskDetail = "Develop frontend UI"
                        });
                });

            modelBuilder.Entity("Models.DbEntities.Skill", b =>
                {
                    b.Property<int>("SkillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkillID"));

                    b.Property<string>("SkillName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SkillID");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            SkillID = 1,
                            SkillName = "C#"
                        },
                        new
                        {
                            SkillID = 2,
                            SkillName = "Blazor"
                        });
                });

            modelBuilder.Entity("Models.DbEntities.SkillCard", b =>
                {
                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<string>("SkillsData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("SkillCards");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            SkillsData = "Project Management, Agile"
                        },
                        new
                        {
                            EmployeeID = 2,
                            SkillsData = "Backend Development, API Integration"
                        });
                });

            modelBuilder.Entity("Models.DbEntities.EmployeeSkill", b =>
                {
                    b.HasOne("Models.DbEntities.Employee", "Employee")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.DbEntities.Skill", "Skill")
                        .WithMany("EmployeeSkills")
                        .HasForeignKey("SkillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("Models.DbEntities.EmployeeTask", b =>
                {
                    b.HasOne("Models.DbEntities.Employee", "Employee")
                        .WithMany("EmployeeTasks")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.DbEntities.ProjectTask", "ProjectTask")
                        .WithMany("EmployeeTasks")
                        .HasForeignKey("TaskID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("ProjectTask");
                });

            modelBuilder.Entity("Models.DbEntities.Project", b =>
                {
                    b.HasOne("Models.DbEntities.Customer", "Customer")
                        .WithMany("Projects")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.DbEntities.Employee", null)
                        .WithMany("Projects")
                        .HasForeignKey("EmployeeID");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Models.DbEntities.ProjectTask", b =>
                {
                    b.HasOne("Models.DbEntities.Project", "Project")
                        .WithMany("ProjectTasks")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Models.DbEntities.SkillCard", b =>
                {
                    b.HasOne("Models.DbEntities.Employee", "Employee")
                        .WithOne("SkillCard")
                        .HasForeignKey("Models.DbEntities.SkillCard", "EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Models.DbEntities.Customer", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Models.DbEntities.Employee", b =>
                {
                    b.Navigation("EmployeeSkills");

                    b.Navigation("EmployeeTasks");

                    b.Navigation("Projects");

                    b.Navigation("SkillCard")
                        .IsRequired();
                });

            modelBuilder.Entity("Models.DbEntities.Project", b =>
                {
                    b.Navigation("ProjectTasks");
                });

            modelBuilder.Entity("Models.DbEntities.ProjectTask", b =>
                {
                    b.Navigation("EmployeeTasks");
                });

            modelBuilder.Entity("Models.DbEntities.Skill", b =>
                {
                    b.Navigation("EmployeeSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
